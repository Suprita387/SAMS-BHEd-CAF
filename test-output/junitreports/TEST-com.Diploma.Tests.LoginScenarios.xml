<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="5" hostname="CSMBHUD073" name="com.Diploma.Tests.LoginScenarios" tests="6" failures="0" timestamp="2020-12-18T15:15:23 IST" time="0.047" errors="1">
  <testcase name="Startup" time="0.047" classname="com.Diploma.Tests.LoginScenarios">
    <error type="java.lang.IllegalStateException" message="The driver executable does not exist: C:\Users\user\Desktop\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Users\user\Desktop\chromedriver.exe
at com.google.common.base.Preconditions.checkState(Preconditions.java:585)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at com.Diploma.browser.BrowserFactoryNew.StartApplication(BrowserFactoryNew.java:21)
at com.Diploma.ObjectRepository.BaseClass.Startup(BaseClass.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- Startup -->
  <system-out/>
  <testcase name="LoginProvidingInvalidMobileNumberAndValidPassword" time="0.000" classname="com.Diploma.Tests.LoginScenarios">
    <skipped/>
  </testcase> <!-- LoginProvidingInvalidMobileNumberAndValidPassword -->
  <system-out/>
  <testcase name="ProvidingValidMobileNumberAndInValidPassword" time="0.000" classname="com.Diploma.Tests.LoginScenarios">
    <skipped/>
  </testcase> <!-- ProvidingValidMobileNumberAndInValidPassword -->
  <system-out/>
  <testcase name="ProvidingInvalidMobileNumberAndInValidPassword" time="0.000" classname="com.Diploma.Tests.LoginScenarios">
    <skipped/>
  </testcase> <!-- ProvidingInvalidMobileNumberAndInValidPassword -->
  <system-out/>
  <testcase name="ProvidingInvalidCaptcha" time="0.000" classname="com.Diploma.Tests.LoginScenarios">
    <skipped/>
  </testcase> <!-- ProvidingInvalidCaptcha -->
  <system-out/>
  <testcase name="LoginProvidingValiddata" time="0.000" classname="com.Diploma.Tests.LoginScenarios">
    <skipped/>
  </testcase> <!-- LoginProvidingValiddata -->
  <system-out/>
</testsuite> <!-- com.Diploma.Tests.LoginScenarios -->
